version: '3.3'
services:
  eureka-discovery-service:
    image: eureka-discovery-service:0.0.1-SNAPSHOT
    container_name: eureka-discovery-service
    ports: 
      - "8761:8761"
    environment:
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
  mysql: 
    image: mysql:latest
    container_name: kwetter_account_db
    environment:
      MYSQL_ROOT_PASSWORD: Kw3tter!
      MYSQL_DATABASE: account_db
    ports:
      - "3306:3306"
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: my-php-myadmin
    ports:
      - "8060:80"
    restart: always
        
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: Kw3tter!

  mongodb_tweet:
    image: mongo:latest
    container_name: mongodb_tweet
    environment: 
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: Kw3tter!
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongodb_tweet_container:/data/db
    ports:
      - "27017:27017"

  mongodb_timeline:
    image: mongo:latest
    container_name: mongodb_timeline
    environment: 
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: Kw3tter!
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongodb_timeline_container:/data/db
    ports:
      - "27018:27017"

  timeline-service:
    image: timeline-service:0.0.1-SNAPSHOT
    hostname: timeline-service
    restart: always
    ports: 
      - "8068:8068"

    depends_on:
      - mongodb_timeline
      - eureka-discovery-service
      - kafka

    environment: 
      SPRING_DATA_MONGODB_HOST: mongodb_timeline

  user-service:
    image: user-service:0.0.1-SNAPSHOT
    hostname: user-service
    restart: always
    ports:
      - "8069:8069"

    depends_on: 
      - mysql
      - eureka-discovery-service
    environment:
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Kw3tter!
      SPRING_DATASOURCE_URL: jdbc:mysql://kwetter_account_db:3306/account_db?createDatabaseIfNotExist=true

  tweet-service:
    image: tweet-service:0.0.1-SNAPSHOT 
    hostname: tweet-service
    restart: always
    ports:
      - "8070:8070"

    depends_on: 
      - mongodb_tweet
      - eureka-discovery-service
      - kafka

    environment: 
      SPRING_DATA_MONGODB_HOST: mongodb_tweet
  
  api-gateway:
    image: api-gateway:0.0.1-SNAPSHOT
    hostname: api-gateway
    restart: always
    ports:
      - "8050:8050"
    depends_on: 
      - tweet-service
      - user-service
      - eureka-discovery-service
    environment:
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://tweet-service:8070
      SPRING_CLOUD_GATEWAY_ROUTES[0]_ID: tweet-service
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: Path=/api/tweets/**
      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://user-service:8069
      SPRING_CLOUD_GATEWAY_ROUTES[1]_ID: user-service
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: Path=/api/account/**
      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://timeline-service:8068
      SPRING_CLOUD_GATEWAY_ROUTES[1]_ID: timeline-service
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: Path=/api/timeline/**
  
  zookeeper:
    extends:
      file: kafka.yml
      service: zookeeper
  kafka:
    extends:
      file: kafka.yml
      service: kafka
    
volumes:
  mongodb_tweet_container:
  mongodb_timeline_container: