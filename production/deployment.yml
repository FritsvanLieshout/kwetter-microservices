apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: api-gateway
    name: api-gateway
  spec:
    type: LoadBalancer
    ports:
    - name: "8050"
      port: 8050
      targetPort: 80
    selector:
      io.kompose.service: api-gateway
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: auth-service
    name: auth-service
  spec:
    ports:
    - name: "8067"
      port: 8067
      targetPort: 8067
    selector:
      io.kompose.service: auth-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: eureka-discovery-service
    name: eureka-discovery-service
  spec:
    ports:
    - name: "8761"
      port: 8761
      targetPort: 8761
    selector:
      io.kompose.service: eureka-discovery-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: follow-service
    name: follow-service
  spec:
    ports:
    - name: "8066"
      port: 8066
      targetPort: 8066
    selector:
      io.kompose.service: follow-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kafdrop
    name: kafdrop
  spec:
    ports:
    - name: "9000"
      port: 9000
      targetPort: 9000
    selector:
      io.kompose.service: kafdrop
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kafka
    name: kafka
  spec:
    ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
    - name: "29092"
      port: 29092
      targetPort: 29092
    selector:
      io.kompose.service: kafka
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: like-service
    name: like-service
  spec:
    ports:
    - name: "8064"
      port: 8064
      targetPort: 8064
    selector:
      io.kompose.service: like-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-follow
    name: mongodb-follow
  spec:
    ports:
    - name: "27019"
      port: 27019
      targetPort: 27017
    selector:
      io.kompose.service: mongodb-follow
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-like
    name: mongodb-like
  spec:
    ports:
    - name: "27022"
      port: 27022
      targetPort: 27017
    selector:
      io.kompose.service: mongodb-like
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-timeline
    name: mongodb-timeline
  spec:
    ports:
    - name: "27018"
      port: 27018
      targetPort: 27017
    selector:
      io.kompose.service: mongodb-timeline
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-trending
    name: mongodb-trending
  spec:
    ports:
    - name: "27021"
      port: 27021
      targetPort: 27017
    selector:
      io.kompose.service: mongodb-trending
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-tweet
    name: mongodb-tweet
  spec:
    ports:
    - name: "27020"
      port: 27020
      targetPort: 27017
    selector:
      io.kompose.service: mongodb-tweet
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mysql
    name: mysql
  spec:
    ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
    selector:
      io.kompose.service: mysql
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mysql-db-auth
    name: mysql-db-auth
  spec:
    ports:
    - name: "3307"
      port: 3307
      targetPort: 3307
    selector:
      io.kompose.service: mysql-db-auth
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: phpmyadmin
    name: phpmyadmin
  spec:
    ports:
    - name: "8060"
      port: 8060
      targetPort: 80
    selector:
      io.kompose.service: phpmyadmin
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: phpmyadmin-auth
    name: phpmyadmin-auth
  spec:
    ports:
    - name: "8059"
      port: 8059
      targetPort: 80
    selector:
      io.kompose.service: phpmyadmin-auth
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: timeline-service
    name: timeline-service
  spec:
    ports:
    - name: "8068"
      port: 8068
      targetPort: 8068
    selector:
      io.kompose.service: timeline-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: trending-service
    name: trending-service
  spec:
    ports:
    - name: "8065"
      port: 8065
      targetPort: 8065
    selector:
      io.kompose.service: trending-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: tweet-service
    name: tweet-service
  spec:
    ports:
    - name: "8070"
      port: 8070
      targetPort: 8070
    selector:
      io.kompose.service: tweet-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: user-service
    name: user-service
  spec:
    ports:
    - name: "8069"
      port: 8069
      targetPort: 8069
    selector:
      io.kompose.service: user-service
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: api-gateway
    name: api-gateway
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: api-gateway
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: api-gateway
      spec:
        containers:
        - image: kwetterfrits/api-gateway:latest
          imagePullPolicy: ""
          name: api-gateway
          ports:
          - containerPort: 8050
          resources: {}
        hostname: api-gateway
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: auth-service
    name: auth-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: auth-service
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: auth-service
      spec:
        containers:
        - env:
          - name: SPRING_DATASOURCE_PASSWORD
            value: Kw3tter!
          - name: SPRING_DATASOURCE_URL
            value: jdbc:mysql://mysql_db_auth:3306/auth_user?createDatabaseIfNotExist=true
          - name: SPRING_DATASOURCE_USERNAME
            value: root
          image: kwetterfrits/auth-service:latest
          imagePullPolicy: ""
          name: auth-service
          ports:
          - containerPort: 8067
          resources: {}
        hostname: auth-service
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: eureka-discovery-service
    name: eureka-discovery-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: eureka-discovery-service
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: eureka-discovery-service
      spec:
        containers:
        - env:
          - name: EUREKA_INSTANCE_PREFER_IP_ADDRESS
            value: "true"
          image: eureka-discovery-service:0.0.1-SNAPSHOT
          imagePullPolicy: ""
          name: eureka-discovery-service
          ports:
          - containerPort: 8761
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: follow-service
    name: follow-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: follow-service
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: follow-service
      spec:
        containers:
        - env:
          - name: SPRING_DATA_MONGODB_HOST
            value: mongodb_follow
          image: kwetterfrits/follow-service:latest
          imagePullPolicy: ""
          name: follow-service
          ports:
          - containerPort: 8066
          resources: {}
        hostname: follow-service
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: kafdrop
    name: kafdrop
  spec:
    containers:
    - env:
      - name: KAFKA_BROKERCONNECT
        value: kafka:9092
      image: obsidiandynamics/kafdrop
      name: kafdrop
      ports:
      - containerPort: 9000
      resources: {}
    restartPolicy: Never
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kafka
    name: kafka
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: kafka
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: kafka
      spec:
        containers:
        - env:
          - name: ALLOW_PLAINTEXT_LISTENER
            value: yes
          - name: KAFKA_ADVERTISED_LISTENERS
            value: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
          - name: KAFKA_BROKER_ID
            value: "2"
          - name: KAFKA_LISTENERS
            value: PLAINTEXT://:9092,PLAINTEXT_HOST://0.0.0.0:29092
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zookeeper:2181
          image: confluentinc/cp-kafka:5.3.1
          imagePullPolicy: ""
          name: kafka
          ports:
          - containerPort: 9092
          - containerPort: 29092
          resources: {}
        hostname: kafka
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: like-service
    name: like-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: like-service
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: like-service
      spec:
        containers:
        - env:
          - name: SPRING_DATA_MONGODB_HOST
            value: mongodb_like
          image: kwetterfrits/like-service:latest
          imagePullPolicy: ""
          name: like-service
          ports:
          - containerPort: 8064
          resources: {}
        hostname: like-service
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-follow
    name: mongodb-follow
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mongodb-follow
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mongodb-follow
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: Kw3tter!
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          image: mongo:latest
          imagePullPolicy: ""
          name: mongodb-follow
          ports:
          - containerPort: 27017
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-like
    name: mongodb-like
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mongodb-like
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mongodb-like
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: Kw3tter!
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          image: mongo:latest
          imagePullPolicy: ""
          name: mongodb-like
          ports:
          - containerPort: 27017
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-timeline
    name: mongodb-timeline
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mongodb-timeline
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mongodb-timeline
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: Kw3tter!
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          image: mongo:latest
          imagePullPolicy: ""
          name: mongodb-timeline
          ports:
          - containerPort: 27017
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-trending
    name: mongodb-trending
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mongodb-trending
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mongodb-trending
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: Kw3tter!
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          image: mongo:latest
          imagePullPolicy: ""
          name: mongodb-trending
          ports:
          - containerPort: 27017
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-tweet
    name: mongodb-tweet
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mongodb-tweet
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mongodb-tweet
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: Kw3tter!
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          image: mongo:latest
          imagePullPolicy: ""
          name: mongodb-tweet
          ports:
          - containerPort: 27017
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mysql
    name: mysql
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mysql
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: account_db
          - name: MYSQL_ROOT_PASSWORD
            value: Kw3tter!
          image: mysql:latest
          imagePullPolicy: ""
          name: kwetter-account-db
          ports:
          - containerPort: 3306
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mysql-db-auth
    name: mysql-db-auth
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mysql-db-auth
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mysql-db-auth
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: auth_user
          - name: MYSQL_ROOT_PASSWORD
            value: Kw3tter!
          image: mysql:latest
          imagePullPolicy: ""
          name: mysql-db-auth
          ports:
          - containerPort: 3307
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: phpmyadmin
    name: phpmyadmin
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: phpmyadmin
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: phpmyadmin
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: Kw3tter!
          - name: PMA_HOST
            value: mysql
          image: phpmyadmin/phpmyadmin:latest
          imagePullPolicy: ""
          name: my-php-myadmin
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: phpmyadmin-auth
    name: phpmyadmin-auth
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: phpmyadmin-auth
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: phpmyadmin-auth
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: Kw3tter!
          - name: PMA_ARBITRARY
            value: "1"
          - name: PMA_HOST
            value: mysql_db_auth
          - name: PMA_PORT
            value: "3308"
          image: phpmyadmin/phpmyadmin:latest
          imagePullPolicy: ""
          name: my-php-myadmin-auth
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: timeline-service
    name: timeline-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: timeline-service
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: timeline-service
      spec:
        containers:
        - env:
          - name: SPRING_DATA_MONGODB_HOST
            value: mongodb_timeline
          image: kwetterfrits/timeline-service:latest
          imagePullPolicy: ""
          name: timeline-service
          ports:
          - containerPort: 8068
          resources: {}
        hostname: timeline-service
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: trending-service
    name: trending-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: trending-service
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: trending-service
      spec:
        containers:
        - env:
          - name: SPRING_DATA_MONGODB_HOST
            value: mongodb_trending
          image: kwetterfrits/trending-service:latest
          imagePullPolicy: ""
          name: trending-service
          ports:
          - containerPort: 8065
          resources: {}
        hostname: trending-service
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: tweet-service
    name: tweet-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: tweet-service
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: tweet-service
      spec:
        containers:
        - env:
          - name: SPRING_DATA_MONGODB_HOST
            value: mongodb_tweet
          image: kwetterfrits/tweet-service:latest
          imagePullPolicy: ""
          name: tweet-service
          ports:
          - containerPort: 8070
          resources: {}
        hostname: tweet-service
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: user-service
    name: user-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: user-service
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: user-service
      spec:
        containers:
        - env:
          - name: SPRING_DATASOURCE_PASSWORD
            value: Kw3tter!
          - name: SPRING_DATASOURCE_URL
            value: jdbc:mysql://kwetter_account_db:3306/account_db?createDatabaseIfNotExist=true
          - name: SPRING_DATASOURCE_USERNAME
            value: root
          image: kwetterfrits/user-service:latest
          imagePullPolicy: ""
          name: user-service
          ports:
          - containerPort: 8069
          resources: {}
        hostname: user-service
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe convert
        -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: zookeeper
    name: zookeeper
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: zookeeper
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\frits\Documents\Semester6\kompose-windows-amd64.exe
            convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: zookeeper
      spec:
        containers:
        - env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          - name: ZOOKEEPER_SYNC_LIMIT
            value: "2"
          - name: ZOOKEEPER_TICK_TIME
            value: "2000"
          image: confluentinc/cp-zookeeper:5.3.1
          imagePullPolicy: ""
          name: zookeeper
          resources: {}
        hostname: zookeeper
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
kind: List
metadata: {}

